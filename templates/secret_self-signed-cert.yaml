---
apiVersion: v1
kind: Secret
metadata:
  {{- $name := (include "helm-gen-self-signed-cert.fullname" .) }}
  name: {{ $name }}
  annotations:
    description: {{ .Release.Name }} Self-Signed x.509/TLS Certificate
  labels:
    {{- include "helm-gen-self-signed-cert.labels" . | nindent 4 }}
type: Opaque
data:
{{/* We regenerate when 'renew' was requested, the secret doesn't exist, or the filenames are not in previous secret. */}}
{{- $previous := lookup "v1" "Secret" .Release.Namespace $name }}
{{- if and (not .Values.renew) $previous (hasKey $previous .Values.filenames.cert) (hasKey $previous .Values.filenames.key) }}
  {{ .Values.filenames.cert }}: |
    {{- get $previous.data .Values.filenames.cert | nindent 4 }}
  {{ .Values.filenames.key }}: |
    {{- get $previous.data .Values.filenames.key | nindent 4 }}
{{- else }}
  {{- $ca := genCA (print .Release.Name "-self-signing-ca") .Values.expires }}
  {{- $generated := genSignedCert .Values.hostname nil .Values.altNames .Values.expires $ca }}
  {{ .Values.filenames.cert }}: |
    {{- $generated.Cert | b64enc | nindent 4 }}
  {{ .Values.filenames.key }}: |
    {{- $generated.Key | b64enc | nindent 4 }}
{{- end }}
